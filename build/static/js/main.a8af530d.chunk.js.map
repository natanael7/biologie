{
  "version": 3,
  "sources": [
    "components/Cell.jsx",
    "components/Row.jsx",
    "components/Table.jsx",
    "logic/class.js",
    "components/InputPage.jsx",
    "logic/fetch.js",
    "App.js",
    "serviceWorker.js",
    "index.js"
  ],
  "names": [
    "Cell",
    "size",
    "this",
    "props",
    "Grid",
    "item",
    "style",
    "width",
    "Paper",
    "className",
    "class",
    "value",
    "Component",
    "Cells",
    "cells",
    "map",
    "cell",
    "index",
    "key",
    "Row",
    "Fragment",
    "data",
    "length",
    "useStyles",
    "makeStyles",
    "theme",
    "root",
    "color",
    "flexGrow",
    "paper",
    "fontSize",
    "padding",
    "spacing",
    "textAlign",
    "palette",
    "text",
    "secondary",
    "NestedGrid",
    "classes",
    "Rows",
    "rows",
    "row",
    "container",
    "sort",
    "str",
    "split",
    "a",
    "b",
    "localeCompare",
    "sensitivity",
    "join",
    "Allele",
    "chr",
    "dominance",
    "toUpperCase",
    "Character",
    "descriptors",
    "allele",
    "type",
    "undefined",
    "trait",
    "Gene",
    "alleles",
    "homozygote",
    "Individual",
    "genes",
    "phenotype",
    "gamets",
    "i",
    "push",
    "concat",
    "arr",
    "lowCase",
    "grouped",
    "indexOf",
    "toLowerCase",
    "list",
    "n",
    "result",
    "current",
    "forEach",
    "rec",
    "combine",
    "group",
    "Set",
    "_Problem",
    "parents",
    "traits",
    "mom",
    "dad",
    "kids",
    "birth",
    "genotype",
    "calcGenotype",
    "values",
    "calcPhenotype",
    "ratio",
    "table",
    "makeTable",
    "sperm",
    "ovule",
    "acc",
    "property",
    "child",
    "gene",
    "el",
    "slice",
    "val",
    "kid",
    "reduce",
    "ovules",
    "sperms",
    "zygotes",
    "fusion",
    "embrions",
    "zygot",
    "InputPage",
    "state",
    "handleChangeOfMom",
    "bind",
    "handleChangeOfDad",
    "handleSubmit",
    "event",
    "setState",
    "target",
    "req",
    "Problem",
    "console",
    "log",
    "solve",
    "handler",
    "preventDefault",
    "component",
    "CssBaseline",
    "xs",
    "sm",
    "md",
    "image",
    "elevation",
    "square",
    "Avatar",
    "avatar",
    "height",
    "src",
    "alt",
    "Typography",
    "variant",
    "onSubmit",
    "form",
    "noValidate",
    "TextField",
    "margin",
    "required",
    "fullWidth",
    "id",
    "label",
    "name",
    "autoFocus",
    "onChange",
    "Button",
    "submit",
    "withStyles",
    "backgroundImage",
    "backgroundRepeat",
    "backgroundColor",
    "grey",
    "backgroundSize",
    "backgroundPosition",
    "display",
    "flexDirection",
    "alignItems",
    "main",
    "marginTop",
    "App",
    "fetchToggle",
    "prevprops",
    "prevstate",
    "Boolean",
    "window",
    "location",
    "hostname",
    "match",
    "ReactDOM",
    "render",
    "StrictMode",
    "document",
    "getElementById",
    "navigator",
    "serviceWorker",
    "ready",
    "then",
    "registration",
    "unregister",
    "catch",
    "error",
    "message"
  ],
  "mappings": "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",
  "file": "static/js/main.a8af530d.chunk.js",
  "sourcesContent": [
    "import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nclass Cell extends Component {\n  render() {\n    let size = this.props.size;\n    return (\n      <Grid item style={{ width: `${size}%` }}>\n        <Paper className={this.props.class}>{this.props.value}</Paper>\n      </Grid>\n    );\n  }\n}\n\nexport default Cell;\n",
    "import React, { Component } from \"react\";\nimport Cell from \"./Cell\";\n\nconst Cells = (props) => {\n  return (\n    <>\n      {props.cells.map((cell, index) => (\n        <Cell\n          index={index}\n          key={cell}\n          size={100 / props.size}\n          value={cell}\n          class={props.class}\n        ></Cell>\n      ))}\n    </>\n  );\n};\nclass Row extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Cells\n          cells={this.props.data}\n          class={this.props.class}\n          size={this.props.data.length}\n        ></Cells>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Row;\n",
    "import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Row from \"./Row\";\nimport \"../Table.css\"\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    color: \"#000FFF\",\n    flexGrow: 1,\n  },\n  paper: {\n    fontSize: \"1em\",\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function NestedGrid(props) {\n  const classes = useStyles();\n  const Rows = ({ rows }) => (\n    <>\n      {rows.map((row) => (\n        <Row key={row[0]} class={classes.paper} data={row}></Row>\n      ))}\n    </>\n  );\n  return (\n    <div className={classes.root}>\n      <h2 className=\"title\">Tabelul încrucișării</h2>\n      <Grid container spacing={1}>\n        <Rows rows={props.data} />\n      </Grid>\n    </div>\n  );\n}\n",
    "function sort(str) {\n  return str\n    .split(\"\")\n    .sort()\n    .sort((a, b) => {\n      return a.localeCompare(b, \"en\", {\n        sensitivity: \"base\",\n      });\n    })\n    .join(\"\");\n}\nclass Allele {\n  constructor(chr) {\n    this.value = chr;\n    this.dominance = chr.toUpperCase() === chr;\n  }\n}\nclass Character {\n  constructor(chr, descriptors = []) {\n    this.allele = new Allele(chr);\n    this.type = \"dominant\";\n    if (!this.allele.dominance) this.type = \"recessive\";\n    if (descriptors === undefined)\n      if (descriptors.length > 0)\n        this.trait =\n          descriptors[chr.toUpperCase()].trait +\n          \": \" +\n          descriptors[chr.toUpperCase()][this.type];\n  }\n}\nclass Gene {\n  constructor(str) {\n    this.value = str;\n    this.alleles = [new Allele(str[0]), new Allele(str[1])];\n    this.homozygote = str[0] === str[1];\n  }\n}\nclass Individual {\n  constructor(str = \"\", descriptors = []) {\n    str = sort(str);\n\n    this.value = str;\n    this.genes = [];\n    this.phenotype = [];\n    this.trait = [];\n    this.gamets = this.gamets();\n    for (let i = 0; i < str.length; i++)\n      if (!(i % 2)) {\n        this.genes.push(new Gene(str[i].concat(str[i + 1])));\n        this.phenotype.push(new Character(str[i], descriptors));\n        this.trait.push(new Character(str[i], descriptors).trait);\n      }\n  }\n  group(arr) {\n    let lowCase = [];\n    let grouped = [];\n    for (let i = 0; i < arr.length; i++)\n      if (lowCase.indexOf(arr[i].toLowerCase()) === -1)\n        lowCase.push(arr[i].toLowerCase());\n    for (let i = 0; i < lowCase.length; i++)\n      if (arr.indexOf(lowCase[i].toUpperCase()) === -1)\n        grouped.push([lowCase[i]]);\n      else if (arr.indexOf(lowCase[i]) === -1)\n        grouped.push([lowCase[i].toUpperCase()]);\n      else grouped.push([lowCase[i].toUpperCase(), lowCase[i]]);\n    return grouped;\n  }\n  rec(list, n = 0, result = [], current = []) {\n    if (n === list.length) result.push(current);\n    else\n      list[n].forEach((item) =>\n        this.rec(list, n + 1, result, [...current, item])\n      );\n\n    return result;\n  }\n  combine(arr) {\n    arr = this.rec(arr);\n    for (let i = 0; i < arr.length; i++) arr[i] = arr[i].join(\"\");\n    return arr;\n  }\n  gamets() {\n    return this.combine(this.group([...new Set(this.value.split(\"\"))]));\n  }\n}\nclass Problem {\n  constructor(parents = [], traits = []) {\n    this.traits = traits;\n    this.mom = new Individual(parents.mom, traits);\n    this.dad = new Individual(parents.dad, traits);\n    this.kids = this.birth(this.mom, this.dad);\n    this.genotype = this.calcGenotype().values;\n    this.phenotype = this.calcPhenotype().values;\n    this.ratio = {};\n    this.ratio.genotype = this.calcGenotype().ratio;\n    this.ratio.phenotype = this.calcPhenotype().ratio;\n    this.table = this.makeTable();\n  }\n  makeTable() {\n    if (this.mom.value === \"\" || this.dad.value === \"\") return [];\n    if (this.mom.value === undefined || this.dad.value === undefined) return [];\n    let arr = [[\"P↓→\"]];\n    this.dad.gamets.forEach((sperm) => {\n      arr[0].push(sperm);\n    });\n    this.mom.gamets.forEach((ovule) => {\n      let row = [ovule];\n      this.dad.gamets.forEach((sperm) => {\n        row.push(sort(ovule.concat(sperm)));\n      });\n      arr.push(row);\n    });\n\n    return arr;\n  }\n  calcGenotype() {\n    if (this.mom.value === \"\" || this.dad.value === \"\")\n      return { values: \"\", ratio: \"\" };\n    if (this.mom.value === undefined || this.dad.value === undefined)\n      return {\n        values: \"\",\n        ratio: \"\",\n      };\n    const acc = {};\n    const arr = [];\n    let str = \"\";\n    this.kids.forEach((child) => {\n      if (acc[child.value] === undefined) acc[child.value] = 1;\n      else acc[child.value]++;\n    });\n    for (const property in acc) {\n      arr.push({ gene: property, value: acc[property] });\n    }\n    arr.sort((a, b) => {\n      return b.value - a.value;\n    });\n    arr.forEach((el) => (str = str + el.value + \" : \"));\n    str = str.slice(0, str.length - 2);\n    return { values: arr, ratio: str };\n  }\n  calcPhenotype() {\n    if (this.mom.value === \"\" || this.dad.value === \"\")\n      return { values: \"\", ratio: \"\" };\n    if (this.mom.value === undefined || this.dad.value === undefined)\n      return {\n        values: \"\",\n        ratio: \"\",\n      };\n    function val(kid) {\n      return kid\n        .reduce((acc, val) => {\n          acc.push(val.allele.value);\n          return acc;\n        }, [])\n        .join(\"\");\n    }\n    const acc = {};\n    const arr = [];\n    let str = \"\";\n    this.kids.forEach((child) => {\n      if (acc[val(child.phenotype)] === undefined)\n        acc[val(child.phenotype)] = 1;\n      else acc[val(child.phenotype)]++;\n    });\n    for (const property in acc) {\n      arr.push({ phenotype: property, values: acc[property] });\n      str = str + acc[property] + \" : \";\n    }\n    str = str.slice(0, str.length - 2);\n    arr.sort((a, b) => {\n      return b.phenotype - a.phenotype;\n    });\n    return { values: arr, ratio: str };\n  }\n  fusion(ovules = [], sperms = []) {\n    const zygotes = [];\n    ovules.forEach((ovule) =>\n      sperms.forEach((sperm) => zygotes.push(sort(ovule.concat(sperm))))\n    );\n    return zygotes;\n  }\n  birth(mom, dad) {\n    if (this.mom.value === \"\" || this.dad.value === \"\") return [];\n    if (this.mom.value === undefined || this.dad.value === undefined) return [];\n    const zygotes = this.fusion(mom.gamets, dad.gamets);\n    const embrions = [];\n    zygotes.forEach((zygot) =>\n      embrions.push(new Individual(zygot, this.traits))\n    );\n    return embrions;\n  }\n}\nconst _Problem = Problem;\nexport { _Problem as Problem };\n// let input = {\n//   parents: { mom: \"AABBCc\", dad: \"AaBbCc\" },\n//   traits: {\n//     A: { trait: \"Eye Color\", dominant: \"Brown\", recessive: \"Green\" },\n//     B: { trait: \"Hair Type\", dominant: \"Curly\", recessive: \"Straight\" },\n//     C: { trait: \"Skin color\", dominant: \"Light\", recessive: \"Dark\" },\n//   },\n// };\n",
    "import React, { Component } from \"react\";\nimport solve from \"../logic/fetch\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = (theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(./dna.jpg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nexport class InputPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { mom: \"\", dad: \"\" };\n\n    this.handleChangeOfMom = this.handleChangeOfMom.bind(this);\n    this.handleChangeOfDad = this.handleChangeOfDad.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.classes = props.classes;\n  }\n\n  handleChangeOfMom(event) {\n    this.setState({ mom: event.target.value });\n  }\n  handleChangeOfDad(event) {\n    this.setState({ dad: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const data = solve({\n      parents: {\n        mom: this.state.mom,\n        dad: this.state.dad,\n      },\n    });\n    this.props.handler(data);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <Grid container component=\"main\" className={this.classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={this.classes.image} />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <div className={this.classes.paper}>\n            <Avatar className={this.classes.avatar}>\n              <img style={{ width: 40, height: 40 }} src=\"./dna.svg\" alt=\"\" />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Introduceți genotipul părinților\n            </Typography>\n            <form\n              onSubmit={this.handleSubmit}\n              className={this.classes.form}\n              noValidate\n            >\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"mom\"\n                label=\"Genotupul Mamei Exemplu: AaBbCcDD\"\n                type=\"text\"\n                name=\"mom\"\n                autoFocus\n                value={this.state.mom}\n                onChange={this.handleChangeOfMom}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"dad\"\n                label=\"Genotipul Tatalui Exemplu: AABBCcDd\"\n                type=\"text\"\n                name=\"dad\"\n                value={this.state.dad}\n                onChange={this.handleChangeOfDad}\n              />\n              <Button\n                type=\"submit\"\n                value=\"Submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={this.classes.submit}\n              >\n                Rezolvă\n              </Button>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(InputPage);\n",
    "import { Problem } from \"./class.js\";\nexport default function solve(req) {\n  const a = new Problem(req.parents, req.traits);\n  console.log(1);\n  return a.table;\n}\n",
    "import React, { Component } from \"react\";\nimport Table from \"./components/Table\";\nimport InputPage from \"./components/InputPage\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handler = this.handler.bind(this);\n    this.state = {\n      data: [],\n    };\n  }\n  handler(data) {\n    this.setState({\n      data: data,\n    });\n  }\n  fetchToggle = () => {\n    this.setState({\n      fetchToggle: !this.state.fetchToggle,\n    });\n  };\n  componentDidUpdate(prevprops, prevstate) {\n    console.log(1);\n  }\n  componentDidMount() {\n    console.log(2);\n  }\n  render() {\n    if (this.state.data.length !== 0)\n      return <Table className=\"Table\" data={this.state.data}></Table>;\n    else return <InputPage handler={this.handler}></InputPage>;\n  }\n}\nexport default App;\n\n// class Parent extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.handler = this.handler.bind(this);\n//   }\n\n//   handler() {\n//     this.setState({\n//       someVar: \"some value\",\n//     });\n//   }\n\n//   render() {\n//     return <Child handler={this.handler} />;\n//   }\n// }\n\n// class Child extends React.Component {\n//   render() {\n//     return <Button onClick={this.props.handler} />;\n//   }\n// }\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"
  ],
  "sourceRoot": ""
}
